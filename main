"""Write a function that can print out a board. Set up your board as a list, where each index 1-9 corresponds with a number on a 
number pad, so you get a 3 by 3 board representation."""

def display_board(board):
    print(" | |")
    print(board[7]+"|"+board[8]+"|"+board[9])
    print(" | |")
    print("-----")
    print(" | |")
    print(board[4]+"|"+board[5]+"|"+board[6])
    print(" | |")
    print("-----")
    print(" | |")
    print(board[1]+"|"+board[2]+"|"+board[3])
    print(" | |")
    
"""Write a function that can take in a player input and assign their marker as 'X' or 'O'. Think about using while loops to continually 
ask until you get a correct answer."""

def  player_input():
    player1=0
    player2='X'
    while(player1!='X' and player1!='O'):
      player1=input(("Player 1 select your marker X/O: "))
    print("Player 1 : %s" %player1)
    if player1==player2:
        player2='O'
        print("Player 2 : O\n")
    else:
        player2='X'
        print("Player 2 : X\n")
    return ["#",player1,player2]
#Write a function that takes in the board list object, a marker ('X' or 'O'), and a desired position (number 1-9) and assigns it to
#the board.       

def place_marker(board, marker, position):
    board[position]=marker
#Write a function that takes in a board and a mark (X or O) and then checks to see if that mark has won. 

def win_check(board , marker):
   return ( (board[1]==marker and board[2]==marker and board[3]==marker)or
            (board[4]==marker and board[5]==marker and board[6]==marker)or
            (board[7]==marker and board[8]==marker and board[9]==marker)or
            (board[1]==marker and board[4]==marker and board[7]==marker)or
            (board[2]==marker and board[5]==marker and board[8]==marker)or
            (board[3]==marker and board[6]==marker and board[9]==marker)or
            (board[1]==marker and board[5]==marker and board[9]==marker)or
            (board[3]==marker and board[5]==marker and board[7]==marker))
#Write a function that uses the random module to randomly decide which player goes first.  

import random
def choose_first():
    num=random.randint(1,2)
    print("Player %d will go first"%num)
    return num

#Write a function that returns a boolean indicating whether a space on the board is freely available.    
def space_check(board, position):
    return board[position]==' '   
    
#Write a function that checks if the board is full and returns a boolean value. True if full, False otherwise.
def full_board_check(board):
    check=0
    for i in board:
        if i==' ':
            check+=1
    return check==0

#Write a function that asks for a player's next position (as a number 1-9) and then uses the function from step 6
#to check if it's a free position. If it is, then return the position for later use.
def player_choice(board):
    while(True):
     position=int(input("Choose you next position(1 to 9): "))
     if position not in range(1,9):
         print("Invalid")
         continue
     if (space_check(board,position)):
        place_marker(board,marker,position)
        break
     else:
        print("occupied")
        continue
    display_board(board)
def replay():
    x=input("Do you want to play again? Enter yes or no: ")
    return x=="yes"

print("Welcome to tik-tak-toe!")
board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
lst=[]
while(True):
    lst=player_input()
    num=int(choose_first())
    marker=lst[num]
    ch=input("Are you ready to play? Enter yes or no: ")
    if ch.lower()=='yes':
        pass
    else:
        break
    while(full_board_check(board)==False):
      print("%s's turn"%marker)
      player_choice(board)
      if win_check(board,marker)==True:
          print("Congatulations Player %d! You win!"%lst.index(marker))
          break
      if marker=='X':
          marker='O'
      else:
          marker='X'
    if full_board_check(board):
        print("Sorry! No one wins this one.")
    if replay():
        continue
    else:
        break
